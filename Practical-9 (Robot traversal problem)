//Name: Pritam Morey
//PRN: 22070521134

from sklearn.linear_model import Perceptron
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import numpy as np

# Define a dummy dataset: [obstacle_left, obstacle_right, obstacle_front, goal_direction]
# 0 = no obstacle, 1 = obstacle; goal_direction: 0=left, 1=right, 2=forward, 3=stop
X = np.array([
    [0, 1, 1, 0],  # move left
    [1, 0, 1, 1],  # move right
    [0, 0, 0, 2],  # move forward
    [1, 1, 1, 3],  # stop
    [0, 0, 1, 0],
    [1, 1, 0, 2],
    [0, 1, 0, 1],
    [1, 0, 0, 0],
    [0, 0, 0, 3]
])
y = np.array(['left', 'right', 'forward', 'stop', 'left', 'forward', 'right', 'left', 'stop'])

# Encode the direction labels
le = LabelEncoder()
y_encoded = le.fit_transform(y)

# Split data for training and testing
X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.3, random_state=42)

# ---- Perceptron Model (Binary: "move" vs "stop") ----
print("\n--- Perceptron Binary Model ---")
# Convert multi-class y into binary: 1 = move, 0 = stop
y_binary_train = (y_train != le.transform(['stop'])[0]).astype(int)
y_binary_test = (y_test != le.transform(['stop'])[0]).astype(int)

perceptron = Perceptron()
perceptron.fit(X_train, y_binary_train)
y_pred_binary = perceptron.predict(X_test)

print("Binary Accuracy (move vs stop):", accuracy_score(y_binary_test, y_pred_binary))

# ---- Multi-Category Model ----
print("\n--- Multi-category Model ---")
multi_model = Perceptron()
multi_model.fit(X_train, y_train)
y_pred_multi = multi_model.predict(X_test)

print("Multi-class Accuracy:", accuracy_score(y_test, y_pred_multi))
print("Predicted labels:", le.inverse_transform(y_pred_multi))

# ---- Example Prediction ----
new_input = np.array([[0, 1, 0, 1]])  # e.g., obstacle right, goal to right
predicted_move = le.inverse_transform(multi_model.predict(new_input))[0]
print("\nPredicted direction for new input:", predicted_move)
